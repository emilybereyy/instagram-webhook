from flask import Flask, request
import requests
import sqlite3

app = Flask(__name__)

# Жёстко прописанные токены
TG_TOKEN = "7513240255:AAH-yboJ6FuZNSFzu2B_PhTfXVg38jZeU20"
TG_CHAT_ID = "7513240255"
VERIFY_TOKEN = "57195b7f55896549b7404fb404e78992"
IG_ACCESS_TOKEN = "IGAATgxLArhi5BZAE9RYWd5TlRuanFrT2VTQ0xISjFBci1SZAm1HODJvZAnV3NTgzNzVwY19QTmRFdVJTb3ZAldlN2b3VrU1VqdFJlcDVCX2RXSlJHNzc5TllxTG1qVUlfQ192UkZAZARjFtUUxaX0Y5ejRvVlduZAFBZAdENCQ3k1emp1TQZDZD"
GRAPH_API_URL = "https://graph.facebook.com/v18.0"
TELEGRAM_API = f"https://api.telegram.org/bot{TG_TOKEN}/sendMessage"

# База данных
db = sqlite3.connect('mapping.db', check_same_thread=False)
c = db.cursor()

c.execute('''
CREATE TABLE IF NOT EXISTS user_map (
    ig_user_id TEXT,
    tg_message_id INTEGER
)
''')
db.commit()

@app.route("/")
def home():
    return "Bot is running!"

@app.route("/instagram", methods=["GET", "POST"])
def instagram_webhook():
    if request.method == "GET":
        mode = request.args.get("hub.mode")
        token = request.args.get("hub.verify_token")
        challenge = request.args.get("hub.challenge")
        if mode == "subscribe" and token == VERIFY_TOKEN:
            return challenge, 200
        return "Forbidden", 403

    if request.method == "POST":
        data = request.json
        print("Incoming IG Message:", data)

        for entry in data.get("entry", []):
            for messaging in entry.get("messaging", []):
                sender_id = messaging["sender"]["id"]
                message_text = messaging["message"].get("text")
                if message_text:
                    tg_response = requests.post(TELEGRAM_API, json={
                        "chat_id": TG_CHAT_ID,
                        "text": f"Instagram user {sender_id} says: {message_text}"
                    })
                    if tg_response.ok:
                        message_id = tg_response.json().get("result", {}).get("message_id")
                        if message_id:
                            c.execute("INSERT INTO user_map (ig_user_id, tg_message_id) VALUES (?, ?)", (sender_id, message_id))
                            db.commit()
        return "OK", 200

@app.route("/telegram", methods=["POST"])
def telegram_webhook():
    data = request.json
    print("Incoming TG Message:", data)

    message = data.get("message")
    if message and message.get("reply_to_message"):
        reply_text = message.get("text")
        replied_message_text = message["reply_to_message"]["text"]

        if "Instagram user" in replied_message_text:
            ig_user_id = replied_message_text.split()[2]
            send_instagram_message(ig_user_id, reply_text)

    return "OK", 200

def send_instagram_message(ig_user_id, message):
    url = f"{GRAPH_API_URL}/{ig_user_id}/messages"
    payload = {
        "messaging_type": "RESPONSE",
        "recipient": {"id": ig_user_id},
        "message": {"text": message},
        "access_token": IG_ACCESS_TOKEN
    }
    response = requests.post(url, json=payload)
    print("IG Response:", response.text)

if __name__ == "__main__":
    app.run(debug=True)
